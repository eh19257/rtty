Issues with running on WSl
    - systemd not supported by WSL and so we cant do things like "systemctl sdrplay_apiService start" so we need to instead run the service normally as a binary with "sudo /usr/local/bin/sdrplay_apiService" (this needs to be run as sudo). We might be able to use "service sdrplay_apiService start" isntead but that was never looked into in much detail.
    - Another issue is that my copy of WSL doesn't seem to support the filesystem type "devtmpfs". Support for this is needed for the service "udev" to run - udev is dependency of libusb.

    - WSL 1 doesn't like mounting with udev and usbipd (usbipd-win) so we need to upgrade to WSL 2 and my version of WSL doesnt seem to want to WSL 2 and Ive checked online and no one seems to have my same problem, this is smth I can look at in the future.
    
    - Note: using "sudo apt-get update" on WSL 2 might fuck up the use of "usbip" which inturn fucks up the attaching of USB devices to WSL 2. to fix this you need to run "sudo update-alternatives --install /usr/local/bin/usbip usbip `ls /usr/lib/linux-tools/*/usbip | tail -n1` 20" - more info about this can be found here --> https://github.com/dorssel/usbipd-win/wiki/WSL-support

    - Not really an issue and more of a statement but the RSP1 can transfer data in 2 ways: BULK and ISOCH (isochronous). These are just 2 transfer methods for USB (maybe do some more research into which is better here).


Sampling Issues:
    - We cannot have a sampling rate less than 2 MSPS (million samples per second) as the RSP1 does not allow this (this is behaviour that is standard for legit RSP1s).
    - It also seems that the RSP1 has a minimum amount of sampling time of 1 second - this isn't 100% but no call backs seem to occur when I sleep the main execution thread for less then 1 second (even 999 999 nanosecconds doesn't work).
    - I don't think the callbacks can write all of the samples to a data file fast enough before the end of the program.
    - It's hard to verify but it seems that increasing the bandwidth increases the number of samples per second - this, for obvious reasons, should be what it does. It's late and I'm just making sure that this is happening and there aren't any other weird caveates. * * * Now im not sure that this is happening.

